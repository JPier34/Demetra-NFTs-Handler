{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "shoeMetadata",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "shoeName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "materialOrigin",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "craftmanship",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "designHistory",
								"type": "string"
							},
							{
								"internalType": "enum ShoeMetadata.RarityLevel",
								"name": "rarity",
								"type": "uint8"
							},
							{
								"internalType": "bool",
								"name": "isLotteryWinner",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "creationTimestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "rarityScore",
								"type": "uint256"
							}
						],
						"internalType": "struct ShoeMetadata.ShoeData",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "tokenOfOwnerByIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/DemetraLoyalty.sol": "IDemetraShoeNFT"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"contracts/DemetraLoyalty.sol": {
			"keccak256": "0xb269f70e8a742ab07c0cc391301c9b4866586cd467ada03c3236f854e1c5e9cf",
			"license": "MIT",
			"urls": [
				"bzz-raw://faa4694777ffdda7e50ffb0b9360012c9d670c097974a9270a7abf96172e8bb7",
				"dweb:/ipfs/QmTdGo4A2WFGDVKxuvhi34vFipgwMFruxbTvoCDy1y4Lmx"
			]
		},
		"contracts/libraries/ShoeMetadata.sol": {
			"keccak256": "0xaae691253ba788f094360f075b9f213e1a38eeacd688c4983fb357f593112d95",
			"license": "MIT",
			"urls": [
				"bzz-raw://2a9251eecbf7bf9fa335254c0b062d9e37887198a066b3d3ce64b006f531d9fe",
				"dweb:/ipfs/QmfQV8JL3sN8X8ovCKmaoM6LpdYbkE7arrmJLurP7duFcd"
			]
		}
	},
	"version": 1
}